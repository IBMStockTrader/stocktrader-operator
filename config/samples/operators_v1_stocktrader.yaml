apiVersion: operators.ibm.com/v1
kind: StockTrader
metadata:
  name: example-stocktrader
spec:
  # Default values copied from <project_dir>/helm-charts/stocktrader/values.yaml
  account:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    image:
      repository: ibmstocktrader/account
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
    url: http://{{ .Release.Name }}-account-service:9080/account
  broker:
    autoscale: false
    cpuThreshold: 75
    image:
      repository: ibmstocktrader/broker
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
    url: http://{{ .Release.Name }}-broker-service:9080/broker
  cashAccount:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    exchangeRateUrl: https://api.frankfurter.app/latest
    image:
      repository: ibmstocktrader/cash-account
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
    url: http://{{ .Release.Name }}-cash-account-service:8080/cash-account
  cloudant:
    database: <your Cloudant Account database name>
    id: <your Cloudant ID>
    password: <your Cloudant Password>
    url: <your Cloudant URL>
    host: <your Cloudant Host>
    port: 5984
  database:
    db: trader
    host: db2trader1-ibm-db2oltp-dev
    id: db2inst1
    kind: db2
    password: db2inst1
    port: 50000
    ssl: false
  global:
    auth: basic
    certs: |
      -----BEGIN CERTIFICATE-----
      Put your certificate(s) here, indented appropriately
      -----END CERTIFICATE-----
    configMapName: '{{ .Release.Name }}-config'
    cqrs: false
    disableLogFiles: false
    externalConfigMap: false
    externalSecret: false
    healthCheck: true
    ingress: false
    istio: false
    istioNamespace: istio-system
    jsonLogging: false
    monitoring: true
    proxyServer: false
    proxyServerAddress: <your proxy URL>
    pullSecret: false
    pullSecretName: <your pull secret>
    route: false
    secretName: '{{ .Release.Name }}-credentials'
    specifyCerts: false
    traceSpec: '*=info'
  jwt:
    audience: stock-trader
    issuer: http://stock-trader.ibm.com
  kafka:
    accountTopic: account
    address: <your Kafka proxy service>:30000
    apiKey: <your API key>
    brokerTopic: broker
    cashAccountTopic: cash-account
    historyTopic: history
    portfolioTopic: portfolio
    saslMechanism: PLAIN
    saslJaasConfig: 'org.apache.kafka.common.security.plain.PlainLoginModule required username=\"%s\" password=\"%s\";'
    user: token
  ldap:
    baseDN: o=ibm.com
    bindAuthMechanism: simple
    bindDN: cn=stocktrader,o=ibm.com
    bindPassword: stocktrader-password
    host: bluepages.ibm.com
    port: 389
    realm: BluePages
    ssl: false
  looper:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    image:
      repository: ibmstocktrader/looper
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
    url: http://{{ .Release.Name }}-looper-service:9080/looper
  messaging:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    image:
      repository: ibmstocktrader/messaging
      tag: 1.0.0
    maxReplicas: 10
    notification:
      url: http://{{ .Release.Name }}-notification-service:9080/notification
    replicas: 1
  mongo:
    authDB: <your Mongo auth database>
    database: <your Mongo database>
    ip: <your Mongo IP>
    password: <your Mongo password>
    port: 27017
    connectionString: <your Mongo connection string>
    user: <your Mongo user>
  mq:
    channel: DEV.APP.SVRCONN
    host: mqtrader1-mqtrader1
    id: app
    kind: ibm-mq
    password: ""
    port: 1414
    queue: NotificationQ
    queueManager: stocktrader
  notificationSlack:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    image:
      repository: ibmstocktrader/notification-slack
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
  notificationTwitter:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    image:
      repository: ibmstocktrader/notification-twitter
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
  odm:
    id: odmAdmin
    password: odmAdmin
    url: http://odmtrader1-ibm-odm-dev:9060/DecisionService/rest/ICP_Trader_Dev_1/determineLoyalty
  oidc:
    clientId: <your client id>
    clientSecret: <your client secret>
    discoveryUrl: <your discovery endpoint URL>
    jwksUrl: <your JSON web key set url>
  openwhisk:
    id: <your id>
    password: <your password>
    url: https://openwhisk.ng.bluemix.net/api/v1/namespaces/jalcorn%40us.ibm.com_dev/actions/PostLoyaltyLevelToSlack
  portfolio:
    autoscale: false
    cpuThreshold: 75
    image:
      repository: ibmstocktrader/portfolio
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
    url: http://{{ .Release.Name }}-portfolio-service:9080/portfolio
  redis:
    cacheInterval: 60
    urlWithCredentials: redis://<your credentials>@redistrader1-ibm-redis-ha-dev-master-svc:6379
  s3:
    apiKey: <your S3 API Key>
    bucket: stock-trader
    enabled: false
    endpointUrl: <your S3 endpoint URL>
    location: <your S3 location>
    resourceInstanceId: <your S3 CRN>
  stockQuote:
    apiConnect: https://api.us.apiconnect.ibmcloud.com/jalcornusibmcom-dev/sb/stocks
    autoscale: false
    cpuThreshold: 75
    encryption:
      password: <encryption password>
      saltBytes: <salt bytes generated>
      class: noneEncryptor
    iexApiKey: <your IEX API key>
    iexTrading: https://cloud.iexapis.com/stable/stock
    image:
      repository: ibmstocktrader/stock-quote
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
    url: http://{{ .Release.Name }}-stock-quote-service:9080/stock-quote
  tradeHistory:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    image:
      repository: ibmstocktrader/trade-history
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
    url: http://{{ .Release.Name }}-trade-history-service:9080/trade-history
  trader:
    autoscale: false
    cpuThreshold: 75
    enabled: true
    image:
      repository: ibmstocktrader/trader
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
  tradr:
    autoscale: false
    cpuThreshold: 75
    enabled: false
    image:
      repository: ibmstocktrader/tradr
      tag: 1.0.0
    maxReplicas: 10
    replicas: 1
  twitter:
    accessToken: <your access token>
    accessTokenSecret: <your access token secret>
    consumerKey: <your consumer key>
    consumerSecret: <your consumer secret>
  vault:
    enabled: false
    jwtPath: /var/run/secrets/kubernetes.io/serviceaccount
    path: <path to Vault secrets>
    role: <Vault auth role>
  watson:
    id: apikey
    passwordOrApiKey: <your API key>
    url: https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21&sentences=false
  
  
